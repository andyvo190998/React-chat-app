{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.jsx","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","className","onSubmit","e","preventDefault","text","trim","length","sendMessage","type","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","background","TheirMessage","lastMessage","isFirstMessageByUser","sender","userName","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","backgroundColor","onClick","localStorage","clear","window","location","reload","title","username","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUserName","passWord","setPassWord","handleSubmit","a","authObject","axios","get","headers","setItem","alert","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33b73570.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const {chatId, creds} = props;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const text = value.trim()\n        if(text.length > 0) (sendMessage(creds, chatId, {text}));\n        setValue('');\n    }\n    const handleChange = (e) => {\n        setValue(e.target.value);\n        isTyping(props, chatId)\n    }\n    const handleUpload = (e) => {\n        sendMessage(creds, chatId, {files: e.target.files, text: ''})\n    }\n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            className=\"message-input\"\n            placeholder=\"send a message ....\"\n            value={value}\n            onChange={handleChange}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\"/>\n                </span>\n            </label>\n            <input\n                type=\"file\"\n                multiple={false}\n                id=\"upload-button\"\n                style={{ display: 'none'}}\n                onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\"/>\n            </button>\n        </form>\n    )\n}\n\nexport default MessageForm\n","import React from 'react';\n\n\nconst MyMessage = ({ message }) => {\n    if (message?.attachments?.length>0) {\n        return (\n            <img\n                src={message.attachments[0].file}\n                alt=\"message attachment\"\n                className=\"message-image\"\n                style={{ float: 'right' }}\n            />\n        )\n    }\n    return (\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', background: '#3B2A50'}}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default MyMessage\n","import React from 'react'\n\nconst TheirMessage = ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.userName !== message.sender.userName\n    return (\n        <div className='message-row'>\n            {isFirstMessageByUser && (\n                <div\n                    className='message-avatar'\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\n                />\n            )}\n            {message?.attachments?.length > 0 ?\n                (<img\n                    src={message.attachments[0].file}\n                    alt=\"message attachment\"\n                    className=\"message-image\"\n                    style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n                />) :\n                (<div className=\"message\" style={{ float: 'left', background: '#CABCDC',marginLeft: isFirstMessageByUser ? '4px' : '48px'  }}>\n                    {message.text}\n                </div>)\n            }\n\n        </div>\n    )\n}\n\nexport default TheirMessage\n","import React from 'react';\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages } = props;\n\n    const chat = chats && chats[activeChat];\n    const handleOnclick = () => {\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\n        <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n                float: isMyMessage ? 'right' : 'left',\n                backgroundImage: `url(${person?.person?.avatar})`,\n            }}\n        />\n    ));\n\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n        return keys.map((key, index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\n            const isMyMessage = userName === message.sender.username;\n            return (\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage ? <MyMessage message={message} /> : <TheirMessage message={message} lastMessage={message[lastMessageKey]} />\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>\n                </div>\n            )\n        })\n    }\n    // renderMessages();\n    if (!chat) return 'Loading ....';\n    return (\n        <div className=\"chat-feed\">\n            <div style={{ backgroundColor: 'rgb(240, 240, 240)', float: 'right' }}>\n                <button onClick={handleOnclick}>Logout</button>\n            </div>\n            <div className=\"chat-title-container\">\n                <div className=\"chat-title\">{chat?.title}</div>\n                <div className=\"chat-subtitle\">\n                    {chat.people.map((person) => ` ${person.person.username}`)}\n                </div>\n            </div>\n            {renderMessages()}\n            <div style={{ height: '100px' }} />\n            <div className=\"message-form-container\">\n                <MessageForm {...props} chatId={activeChat} />\n            </div>\n        </div>\n    )\n}\n\nexport default ChatFeed;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n    const [userName, setUserName] = useState('');\n    const [passWord, setPassWord] = useState('');\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const authObject = { 'Project-ID': \"742e0410-898e-41cc-a454-eb28a201adf0\", \"User-Name\": userName, \"User-Secret\": passWord };\n        try {\n            await axios.get('https://api.chatengine.io/chats',  {headers : authObject} );\n            localStorage.setItem('userName', userName);\n            localStorage.setItem('passWord', passWord);\n            window.location.reload();\n        } catch (error) {\n            alert('incorrect user name or password. Please try this again!')\n        }\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"form\">\n                <h1 className=\"title\">Chat Application</h1>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" value={userName} onChange={(e) => setUserName(e.target.value)} className=\"input\" placeholder=\"User name\" required />\n                    <input type=\"password\" value={passWord} onChange={(e) => setPassWord(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n                    <div align=\"center\">\n                        <button type=\"submit\" className=\"button\">\n                            <span>Start Chatting</span>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm\n","import React from 'react';\nimport { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport './App.css'\nimport LoginForm from './components/LoginForm';\n\nconst App = () => {\n  if (!localStorage.getItem('userName')) return <LoginForm />\n\n  return (\n      <ChatEngine\n        height=\"100vh\"\n        projectID=\"742e0410-898e-41cc-a454-eb28a201adf0\"\n        userName={localStorage.getItem('userName')}\n        userSecret={localStorage.getItem('passWord')}\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      />\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}